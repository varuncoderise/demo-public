name: Sync from Private Repo

on:
  repository_dispatch:
    types: [sync-request]

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout public repo (develop)
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Add private repo remote and fetch
        run: |
          git remote add private https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/varuncoderise/demo-internal.git
          git fetch private release/4x

      - name: Cherry-pick commits from private repo
        run: |
          # Create a temp branch from private/release/4x
          git checkout -b private-4x private/release/4x

          # Remove unwanted files
          rm -rf .github
          rm -f CHANGELOG.md
          find . -maxdepth 1 -type f -name ".*" -exec rm -f {} \;

          git add .
          git commit -m "Clean private repo sync (ignore hidden/.github/changelog)" || echo "No clean-up commit needed"

          # Go back to develop
          git checkout develop

          # Rebase develop onto cleaned private branch
          git rebase private-4x || (echo "Rebase failed, trying merge" && git merge private-4x --no-ff)

      - name: Push develop branch
        run: |
          git push origin develop --force

      - name: Create PR develop → main
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const { data: prs } = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
              head: "develop",
              base: "main"
            });
            if (prs.length === 0) {
              const { data: pr } = await github.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: "Sync develop → main",
                head: "develop",
                base: "main",
                body: "Automated PR syncing latest code from private repo into main"
              });
              core.info(`Created PR #${pr.number}`);
            } else {
              core.info("PR from develop → main already exists");
            }