name: Sync from Private Repo

on:
  repository_dispatch:
    types: [sync-request]

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout public repo develop branch
      - name: Checkout public repo
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      # 2️⃣ Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      # 3️⃣ Authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.PAT_TOKEN }}" | gh auth login --with-token

      # 4️⃣ Clone private repo
      - name: Clone private repo
        run: |
          gh repo clone varuncoderise/demo-internal private-repo -- --branch release/4x

      # 5️⃣ Remove unwanted files in private repo
      - name: Clean private repo
        run: |
          cd private-repo
          rm -rf .github
          rm -f CHANGELOG.md
          find . -maxdepth 1 -type f -name ".*" -exec rm -f {} \;

      # 6️⃣ Cherry-pick private repo commits into public develop
      - name: Cherry-pick commits
        run: |
          cd ..
          # Add private repo as temporary remote
          git remote add private ./private-repo
          git fetch private release/4x
          git checkout -b private-4x private/release/4x

          # Switch back to develop
          git checkout develop

          # Cherry-pick only commits not in develop
          commits=$(git log --reverse --pretty=format:"%H" develop..private-4x)
          if [ -n "$commits" ]; then
            for commit in $commits; do
              git cherry-pick -x $commit || git cherry-pick --abort
            done
          else
            echo "No new commits to sync"
          fi

      # 7️⃣ Push develop branch
      - name: Push develop
        run: git push origin develop

      # 8️⃣ Create PR develop → main using gh CLI
      - name: Create PR develop → main
        run: |
          PR_EXISTS=$(gh pr list --head develop --base main --json number --jq '.[0].number')
          if [ -z "$PR_EXISTS" ]; then
            gh pr create \
              --head develop \
              --base main \
              --title "Sync develop → main" \
              --body "Automated PR syncing latest code from private repo into main"
          else
            echo "PR from develop → main already exists: $PR_EXISTS"
