name: Sync from Private Repo

on:
  repository_dispatch:
    types: [sync-request]

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout public repo develop branch
      - name: Checkout public repo
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      # 2️⃣ Install GitHub CLI and verify
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
          gh --version

      # 3️⃣ Check Git environment
      - name: Check Git environment
        run: |
          git --version
          git config --list
          echo "Checking network connectivity to GitHub"
          ping -c 4 github.com

      # 4️⃣ Authenticate GitHub CLI
      - name: Authenticate gh
        run: |
          echo "Authenticating GitHub CLI"
          echo "${{ secrets.PAT_TOKEN }}" | gh auth login --with-token
          gh auth status || echo "GitHub CLI authentication failed"

      # 5️⃣ Clone private repo
      - name: Clone private repo
        run: |
          echo "Cloning private repo: varuncoderise/demo-internal"
          git clone --branch release/4x https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/varuncoderise/demo-internal.git private-repo || {
            echo "Failed to clone private repo"
            exit 1
          }
          echo "Listing branches in private repo"
          cd private-repo
          git branch -a

      # 6️⃣ Sync files from private repo to public repo
      - name: Sync files
        run: |
          echo "Copying files from private repo to public repo"
          cd private-repo
          # Remove unwanted files in private repo
          rm -rf .github
          rm -f CHANGELOG.md
          find . -maxdepth 1 -type f -name ".*" -exec rm -f {} \;
          # Copy files to public repo (parent directory)
          cp -r ./* ../
          cd ..
          # Stage and commit changes
          git add .
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync changes from private repo release/4x"
          fi

      # 7️⃣ Push develop branch
      - name: Push develop
        run: |
          echo "Pushing to develop branch"
          git push origin develop

      # 8️⃣ Create PR develop → main using gh CLI
      - name: Create PR develop → main
        run: |
          echo "Checking for existing PR"
          PR_EXISTS=$(gh pr list --head develop --base main --json number --jq '.[0].number')
          if [ -z "$PR_EXISTS" ]; then
            echo "Creating new PR from develop to main"
            gh pr create \
              --head develop \
              --base main \
              --title "Sync develop → main" \
              --body "Automated PR syncing latest code from private repo into main"
          else
            echo "PR from develop → main already exists: $PR_EXISTS"